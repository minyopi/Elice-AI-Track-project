{"version":3,"sources":["store/user.js","store/key.js","components/TestExample.js","components/SetUser.js","components/Test.js","components/FinishTest.js","components/Result.js","App.js","index.js"],"names":["UserContext","createContext","UserStore","props","users","apikey","qestrnSeq","trgetSe","name","gender","school","grade","email","startDtm","answers","Provider","value","children","StyledLink","styled","Link","isActive","TestExample","useState","answer","setAnswer","setIsActive","handleAnswer","e","target","ActiveBtn","IsActiveBtn","className","to","onClick","preventDefault","useEffect","type","onChange","checked","SetUser","username","setUsername","setGender","context","useContext","getGender","undefined","id","IsActivateLink","BasicLink","StyledCountBar","div","percentage","Test","saveData","setSaveData","a","config","headers","axios","get","response","data","console","log","loadQuestion","inputsInitial","i","length","inputs","setInputs","countPer","setCountPer","handleChange","cur","newSetInputs","inputsForPost","parseInt","Object","keys","entries","input","push","join","params","useParams","page","Number","page_count","question_count","questions","filter","item","ShowQuestions","map","qitemNo","question","String","answerScore01","answer01","answerScore02","answer02","handleScroll","location","document","querySelector","offsetTop","window","scrollTo","top","behavior","SetButton","page_num","checkPage","indexOf","FinishTest","ChartBar","num","Result","jsonData","setJsonData","jobInfo","setJobInfo","majorInfo","setMajorInfo","ShowJobInfo","graduateCollege","graduateUniv","graduateGrad","ShowMajorInfo","ShowChart","wonScore","result","wonScoreList","split","forEach","loadResult","loadJsonData","loadJobInfo","loadMajorInfo","maxNum1","maxNum2","response4","response3","seq","response2","getMaxNum","wonScoreValue","maxNums","sort","j","shift","post","RESULT","load","border","slice","ErrorBoundary","state","hasError","error","errorInfo","this","logErrorToMyService","JSON","stringify","React","Component","App","exact","path","ReactDOM","render","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.a5d0bee5.chunk.js","sourcesContent":["import React, { createContext } from \"react\";\nimport { apikey } from \"./key\";\n\n// user 정보를 담을 context를 만드는 곳\n\nexport const UserContext = createContext();\n\nconst UserStore = (props) => {\n  const users = {\n    apikey: apikey,\n    qestrnSeq: \"6\",\n    trgetSe: \"100209\",\n    name: \"\",\n    gender: \"\",\n    school: \"\",\n    grade: \"\",\n    email: \"\",\n    startDtm: 1550466291034,\n    answers: \"\",\n  };\n\n  return (\n    <UserContext.Provider value={users}>{props.children}</UserContext.Provider>\n  );\n};\n\nexport default UserStore;\n","export const apikey = \"43c8e52955dbc4c8d2b69e98c6d641f2\";\n","import React, {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n    opacity: ${(props) => (props.isActive ? \"1\" : \"0.6\")};\n    cursor: ${(props) => (props.isActive ? \"pointer\" : \"not-allowed\")};\n    text-decoration: none;\n  `;\n\nexport function TestExample() {\n\n  const [answer, setAnswer] = useState(\"\")\n  const [isActive, setIsActive] = useState(false)\n\n  function handleAnswer(e){\n    setAnswer(e.target.value);\n  }\n\n  useEffect(() => {\n    answer === \"\" ? setIsActive(false) : setIsActive(true)\n  }, [ answer ])\n\n\n  function ActiveBtn(props){\n    function IsActiveBtn(props){\n      return <button className={\"btn \" + ( isActive ? \"activeBtn\" : \"disabledBtn\" )}>{props.name}</button>\n    }\n     return (\n       !isActive ?\n      <StyledLink to={props.to} isActive={props.isActive} onClick={(e) => {e.preventDefault();}}><IsActiveBtn name=\"검사 시작\" /></StyledLink>\n      : <StyledLink to={props.to} isActive={props.isActive}><IsActiveBtn name=\"검사 시작\" /></StyledLink>\n      )\n  }\n\n  return (\n    <>\n      <section className=\"testExample\">\n        <div className=\"inner\">\n          <div className=\"content\">\n            <div className=\"title\">\n              <h2>검사예시</h2>\n              <h3 className=\"countPer\">0%</h3>\n            </div>\n            <div className=\"countBar\"></div>\n            <p>\n              직업과 관련된 두개의 가치 중에서 자기에게 더 중요한 가치에 표시하세요.<br />\n            가치의 뜻을 잘모르겠다면 문항 아래에 있는 가치의 설명을 확인해보세요.\n            </p>\n            <div className=\"question\">\n              <div className=\"text\">\n                <h3 className=\"q\">두개 가치 중에 자신에게 더 중요한 가치를 선택하세요.</h3>\n                <form className=\"example\">\n                  <label><input type=\"radio\" name=\"answer\" onChange={handleAnswer} value=\"answer1\" checked={answer === \"answer1\" ? true : false } />능력발휘</label>\n                  <label><input type=\"radio\" name=\"answer\" onChange={handleAnswer} value=\"answer2\" checked={answer === \"answer2\" ? true : false } />자율성</label>\n                </form>\n                <br />\n              </div>\n            </div>\n            <ActiveBtn name=\"검사 시작\" to=\"/test/1\" isActive={isActive}></ActiveBtn>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","import React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { UserContext } from \"../store/user\";\n\nconst StyledLink = styled(Link)`\n    opacity: ${(props) => (props.isActive ? \"1\" : \"0.6\")};\n    cursor: ${(props) => (props.isActive ? \"pointer\" : \"not-allowed\")};\n    text-decoration: none;\n  `;\n\nexport function SetUser() {\n  const [username, setUsername] = useState('');\n  const [gender, setGender] = useState('');\n  const [isActive, setIsActive] = useState(false);\n\n  //  context를 사용하기\n  const context = useContext(UserContext);\n\n  const getUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const getGender = (e) => {\n    setGender(e.target.value);\n  };\n\n  useEffect(() => {\n    if ( username !== \"\" && username !== undefined && gender !== undefined && gender !== \"\") setIsActive(true)\n    else setIsActive(false)\n    context['name'] = username;\n    context['gender'] = gender;\n  }, [username, gender])\n\n  function ActiveBtn(props){\n    function IsActiveBtn(props){\n      return <button className={\"btn \" + ( isActive ? \"activeBtn\" : \"disabledBtn\" )}>{props.name}</button>\n    }\n     return (\n       !isActive ?\n      <StyledLink to={props.to} isActive={props.isActive} onClick={(e) => {e.preventDefault();}}><IsActiveBtn name=\"검사 시작\" /></StyledLink>\n      : <StyledLink to={props.to} isActive={props.isActive}><IsActiveBtn name={props.name} /></StyledLink>\n      )\n  }\n\n  return (\n    <>\n      <section className=\"setUser\">\n        <div className=\"inner\">\n          <div className=\"content\">\n            <h1>직업가치관검사</h1>\n            <form>\n              <div className=\"name\">\n                <p>이름</p>\n                <input\n                  type=\"text\"\n                  id=\"username\"\n                  value={username}\n                  onChange={getUsername} />\n              </div>\n              <br />\n              <div className=\"gender\">\n                <p>성별</p>\n                <label><input type=\"radio\" name=\"gender\" value=\"100323\" onChange={getGender} checked={ gender === \"100323\" ? true : false } />남자</label>\n                <br />\n                <label><input type=\"radio\" name=\"gender\" value=\"100324\" onChange={getGender} checked={ gender === \"100324\" ? true : false } />여자</label>\n              </div>\n              <br />\n              <div className=\"startBtn\">\n                <ActiveBtn name=\"검사 시작\" to='./TestExample' isActive={isActive}></ActiveBtn>\n              </div>\n            </form>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","import React, { useState, useEffect, useContext, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { useParams, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { UserContext } from \"../store/user\";\n\nconst IsActivateLink = styled(Link)`\n  opacity: ${(props) => (props.isActive ? \"1\" : \"0.6\")};\n  cursor: ${(props) => (props.isActive ? \"pointer\" : \"not-allowed\")};\n  text-decoration: none;\n`;\nconst BasicLink = styled(Link)`\n  text-decoration: none;\n`;\nconst StyledCountBar = styled.div`\n  ::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: ${(props) => props.percentage}%;\n    height: 16px;\n    border-radius: 10px;\n    background: #19ae9f;\n    transition: all 0.3s linear;\n  }\n`;\n\nexport function Test(props) {\n  // context 사용하기 위해 가져오기\n  const context = useContext(UserContext);\n  // 문항 불러와서 saveData에 저장하기\n  const [saveData, setSaveData] = useState([]);\n  // 값을 선택하지 않으면 비활성화\n  const [isActive, setIsActive] = useState(false);\n\n  useEffect(() => {\n    async function loadQuestion() {\n      try {\n        var config = {\n          headers: {\n            \"Access-Control-Allow-Origin\":\n              \"https://minyopi.github.io/elice-ai-track-project/\",\n          },\n        };\n        const response = await axios.get(\n          `http://www.career.go.kr/inspct/openapi/test/questions?apikey=${context.apikey}&q=6`,\n          config\n        );\n        setSaveData(response.data[\"RESULT\"]);\n      } catch (e) {\n        console.log(\"에러 발생\");\n      }\n    }\n    loadQuestion();\n  }, []);\n\n  // 선택한 input 값 받아오기\n  const inputsInitial = {};\n  for (let i = 1; i < saveData.length + 1; i++) {\n    inputsInitial[`B${i}`] = \"\";\n  }\n  const [inputs, setInputs] = useState(inputsInitial);\n  const [countPer, setCountPer] = useState(0);\n\n  function handleChange(e) {\n    const { value, name } = e.target;\n    setInputs((cur) => {\n      let newSetInputs = { ...cur };\n      newSetInputs[name] = value;\n      return newSetInputs;\n    });\n  }\n  const inputsForPost = [];\n  useEffect(() => {\n    setCountPer(parseInt((100 * Object.keys(inputs).length) / saveData.length));\n    if (Object.keys(inputs).length === saveData.length) {\n      for (let input of Object.entries(inputs)) {\n        inputsForPost.push(input.join(\"=\"));\n        context.answers = inputsForPost.join(\" \");\n      }\n    }\n  }, [inputs, saveData]);\n\n  // useParams 사용해서 한 페이지당 5문항씩 페이지 나눠주기\n  const params = useParams();\n  let page = Number(params.page);\n  let page_count = 1;\n  let question_count = 0;\n\n  const questions = saveData.filter((item) => {\n    question_count += 1;\n    if (question_count === 1) page_count = 1;\n    else if (question_count % 5 === 1) {\n      page_count += 1;\n    }\n    return page === page_count;\n  });\n\n  // 문항 만드는 템플릿 컴포넌트\n  const ShowQuestions = () => {\n    const show = questions.map((item) => {\n      return (\n        <>\n          <div className=\"question\">\n            <div className=\"text\">\n              <h3 className=\"q\">\n                {item.qitemNo}. {item.question}\n              </h3>\n              <form className=\"testInput\">\n                <label>\n                  <input\n                    type=\"radio\"\n                    name={\"B\" + String(item.qitemNo)}\n                    onChange={handleChange}\n                    value={item.answerScore01}\n                    checked={\n                      inputs[\"B\" + String(item.qitemNo)] === item.answerScore01\n                        ? true\n                        : false\n                    }\n                  />\n                  {item.answer01}\n                </label>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name={\"B\" + String(item.qitemNo)}\n                    onChange={handleChange}\n                    value={item.answerScore02}\n                    checked={\n                      inputs[\"B\" + String(item.qitemNo)] === item.answerScore02\n                        ? true\n                        : false\n                    }\n                  />\n                  {item.answer02}\n                </label>\n              </form>\n            </div>\n          </div>\n        </>\n      );\n    });\n    return show;\n  };\n\n  // isActive 관리를 어떻게 해줄건지\n  useEffect(() => {\n    let checkInput = questions.map((item) => {\n      return `B${item[\"qitemNo\"]}`;\n    });\n    let checkPage = checkInput.map((item) => {\n      if (inputs[item] === \"\" || inputs[item] === undefined) return false;\n      else return true;\n    });\n    if (checkPage.indexOf(false) > -1 || checkPage.length === 0)\n      setIsActive(false);\n    else if (checkPage.indexOf(false) === -1) setIsActive(true);\n  }, [inputs, questions]);\n\n  // 다음 버튼 누르면 스크린 이동시키는 함수\n  function handleScroll() {\n    var location = document.querySelector(\"body\").offsetTop;\n    window.scrollTo({ top: location, behavior: \"auto\" });\n  }\n\n  // 이전, 다음 버튼 설정해주는 컴포넌트\n  function SetButton() {\n    let page_num = Number(page);\n    if (page_num === 1) {\n      return (\n        <>\n          <BasicLink to={\"/testExample\"}>\n            <button className=\"btn\">이전</button>\n          </BasicLink>\n          {!isActive ? (\n            <IsActivateLink\n              to={\"/test/\" + (page_num + 1)}\n              isActive={isActive}\n              onClick={(e) => {\n                e.preventDefault();\n              }}\n            >\n              <button\n                className={\n                  \"btn right \" + (isActive ? \"activeBtn\" : \"disabledBtn\")\n                }\n              >\n                다음\n              </button>\n            </IsActivateLink>\n          ) : (\n            <IsActivateLink\n              to={\"/test/\" + (page_num + 1)}\n              isActive={isActive}\n              onClick={handleScroll}\n            >\n              <button\n                className={\n                  \"btn right \" + (isActive ? \"activeBtn\" : \"disabledBtn\")\n                }\n              >\n                다음\n              </button>\n            </IsActivateLink>\n          )}\n        </>\n      );\n    } else if (page_num === 6) {\n      return (\n        <>\n          <BasicLink to={\"/test/\" + (page_num - 1)}>\n            <button className=\"btn\">이전</button>\n          </BasicLink>\n          {!isActive ? (\n            <IsActivateLink\n              to={\"/finishTest\"}\n              isActive={isActive}\n              onClick={(e) => {\n                e.preventDefault();\n              }}\n            >\n              <button\n                className={\n                  \"btn right \" + (isActive ? \"activeBtn\" : \"disabledBtn\")\n                }\n              >\n                완료\n              </button>\n            </IsActivateLink>\n          ) : (\n            <IsActivateLink to={\"/finishTest\"} isActive={isActive}>\n              <button\n                className={\n                  \"btn right \" + (isActive ? \"activeBtn\" : \"disabledBtn\")\n                }\n              >\n                완료\n              </button>\n            </IsActivateLink>\n          )}\n        </>\n      );\n    }\n    return (\n      <>\n        <BasicLink to={\"/test/\" + (page_num - 1)}>\n          <button className=\"btn\">이전</button>\n        </BasicLink>\n        {!isActive ? (\n          <IsActivateLink\n            to={\"/test/\" + (page_num + 1)}\n            isActive={isActive}\n            onClick={(e) => {\n              e.preventDefault();\n            }}\n          >\n            <button\n              className={\n                \"btn right \" + (isActive ? \"activeBtn\" : \"disabledBtn\")\n              }\n            >\n              다음\n            </button>\n          </IsActivateLink>\n        ) : (\n          <IsActivateLink\n            to={\"/test/\" + (page_num + 1)}\n            isActive={isActive}\n            onClick={handleScroll}\n          >\n            <button\n              className={\n                \"btn right \" + (isActive ? \"activeBtn\" : \"disabledBtn\")\n              }\n            >\n              다음\n            </button>\n          </IsActivateLink>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <>\n      <section className=\"test\">\n        <div className=\"inner\">\n          <div className=\"content\">\n            <div className=\"title\">\n              <h2>검사 진행</h2>\n              <h3 className=\"countPer\">{countPer}%</h3>\n            </div>\n            <StyledCountBar\n              className=\"countBar\"\n              percentage={countPer}\n            ></StyledCountBar>\n            {saveData && saveData.length > 0 ? <ShowQuestions /> : undefined}\n            <br />\n            <div className=\"btnBox\">\n              <SetButton></SetButton>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nconst BasicLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport function FinishTest() {\n  return (\n    <>\n      <section className=\"finish\">\n        <div className=\"inner\">\n          <h1>검사가 완료되었습니다.</h1>\n          <p>\n            검사 결과는 여러분이 직업을 선택할 때 상대적으로 어떠한 가치를 중요하게 생각하는지를 알려주고,<br />\n            중요 가치를 충족시켜줄 수 있는 직업에 대해 생각해 볼 기회를 제공합니다.\n          </p>\n          <div className=\"goResult\">\n            <BasicLink to='/result'><button className=\"btn\" type=\"button\">결과보기</button></BasicLink>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","import axios from 'axios';\nimport React, { useEffect, useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { UserContext } from \"../store/user\";\nconst BasicLink = styled(Link)`\n  text-decoration: none;\n`;\nconst ChartBar = styled.div`\n  width: 100%;\n  height: ${props => props.num*10}%;\n  background-color: #B2ACFA;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n`;\n\nexport function Result() {\n  const context = useContext(UserContext);\n  const [jsonData, setJsonData] = useState({})\n  const [jobInfo, setJobInfo] = useState([])\n  const [majorInfo, setMajorInfo] = useState([])\n\n  // POST, GET 통신으로 정보 받아오기\n  useEffect(() => {\n    async function load(){\n      let seq = \"\";\n      let maxNum1 = \"\";\n      let maxNum2 = \"\";\n      async function loadResult(){\n        try {\n          const response = await axios.post(`http://www.career.go.kr/inspct/openapi/test/report?apikey=${context.apikey}&qestrnSeq=6`, context);\n          seq = response.data.RESULT['url'].split(\"seq=\")[1];\n          console.log('POST 불러오기 성공');\n        } catch (e) {\n          console.log('POST 요청에서 에러 발생');\n        }\n      }\n      async function loadJsonData(){\n        try {\n          const response2 = await axios.get(`https://www.career.go.kr/inspct/api/psycho/report?seq=${seq}`);\n          setJsonData(response2['data'])\n          const wonScore = response2['data'].result['wonScore'];\n          const getMaxNum = [];\n          for (let i of wonScore.split(\" \")){\n              let wonScoreValue = i.split(\"=\")\n              getMaxNum.push([parseInt(wonScoreValue[1]),wonScoreValue[0]])\n          }\n          let maxNums = []\n          for (let i = 0; i < getMaxNum.length; i++){\n              if (maxNums.length < 2){\n                  maxNums.push(getMaxNum[i])\n                  maxNums.sort()\n              } else {\n                  for (let j = 0; j < maxNums.length; j++){\n                      if (maxNums[j][0] < getMaxNum[i][0]){\n                          maxNums.shift()\n                          maxNums.push(getMaxNum[i])\n                          maxNums.sort()\n                      }\n                  }\n              }\n          }\n          maxNum1 = maxNums[1][1];\n          maxNum2 = maxNums[0][1];\n        } catch (error) {\n          console.log(\"JSON Data GET요청에서 에러 발생\")\n        }\n      }\n      async function loadJobInfo(){\n        try {\n          const response3 = await axios.get(`https://inspct.career.go.kr/inspct/api/psycho/value/jobs?no1=${maxNum1}&no2=${maxNum2}`);\n          setJobInfo(response3['data'])\n        } catch (e) {\n          console.log(\"관련 직종 GET 요청에서 에러\")\n        }\n      }\n      async function loadMajorInfo(){\n        try {\n          const response4 = await axios.get(`https://inspct.career.go.kr/inspct/api/psycho/value/majors?no1=${maxNum1}&no2=${maxNum2}`);\n          setMajorInfo(response4['data'])\n        } catch (e) {\n          console.log(\"관련 학과 GET 요청에서 에러\")\n        }\n      }\n      await loadResult();\n      await loadJsonData();\n      await loadJobInfo();\n      await loadMajorInfo();\n    }\n    load();\n  }, [ ])\n\n  function ShowJobInfo(){\n    const graduateCollege = jobInfo\n    .filter((item) => {\n      return item[2] === 1 || item[2] === 2 || item[2] === 3\n    })\n    .map((item) => {\n      return item[1]\n    })\n    .join(\", \");\n\n    const graduateUniv = jobInfo\n    .filter((item) => {\n      return item[2] === 4\n    })\n    .map((item) => {\n      return item[1]\n    })\n    .join(\", \");\n\n    const graduateGrad = jobInfo\n    .filter((item) => {\n      return item[2] === 5\n    })\n    .map((item) => {\n      return item[1]\n    })\n    .join(\", \");\n    \n\n\n    return (\n    <>\n      <h3>종사자 평균 학력별</h3>\n      <table>\n        <th className=\"job-th-1\">분야</th>\n        <th className=\"job-th-1\">직업</th>\n        <tr>\n          <td>전문대졸</td>\n          <td>{graduateCollege}</td>\n        </tr>\n        <tr>\n          <td>대졸</td>\n          <td>{graduateUniv}</td>\n        </tr>\n        <tr>\n          <td>대학원졸</td>\n          <td>{graduateGrad}</td>\n        </tr>\n      </table>\n    </>\n    )\n  }\n\n  function ShowMajorInfo(){\n    return (\n    <>\n      <h3>종사자 평균 전공별</h3>\n      <table>\n        <th className=\"major-th-1\">분야</th>\n        <th className=\"major-th-2\">직업</th>\n        <tr>\n          <td>계열무관</td>\n          <td>\n            {majorInfo\n              .filter((item) => {\n                return item[2] === 0\n              })\n              .map((item) => {\n                return item[1]\n              })\n              .join(\", \")}\n          </td>\n        </tr>\n        <tr>\n          <td>인문</td>\n          <td>\n            {majorInfo\n              .filter((item) => {\n                return item[2] === 1\n              })\n              .map((item) => {\n                return item[1]\n              })\n              .join(\", \")}\n          </td>\n        </tr>\n        <tr>\n          <td>사회</td>\n          <td>\n            {majorInfo\n              .filter((item) => {\n                return item[2] === 2\n              })\n              .map((item) => {\n                return item[1]\n              })\n              .join(\", \")}\n          </td>\n        </tr>\n        <tr>\n          <td>교육</td>\n          <td>\n            {majorInfo\n              .filter((item) => {\n                return item[2] === 3\n              })\n              .map((item) => {\n                return item[1]\n              })\n              .join(\", \")}\n          </td>\n        </tr>\n        <tr>\n          <td>공학</td>\n          <td>\n            {majorInfo\n              .filter((item) => {\n                return item[2] === 4\n              })\n              .map((item) => {\n                return item[1]\n              })\n              .join(\", \")}\n          </td>\n        </tr>\n        <tr>\n          <td>자연</td>\n          <td>\n            {majorInfo\n              .filter((item) => {\n                return item[2] === 5\n              })\n              .map((item) => {\n                return item[1]\n              })\n              .join(\", \")}\n          </td>\n        </tr>\n        <tr>\n          <td>의학</td>\n          <td>\n            {majorInfo\n              .filter((item) => {\n                return item[2] === 6\n              })\n              .map((item) => {\n                return item[1]\n              })\n              .join(\", \")}\n          </td>\n        </tr>\n        <tr>\n          <td>예체능</td>\n          <td>\n            {majorInfo\n              .filter((item) => {\n                return item[2] === 7\n              })\n              .map((item) => {\n                return item[1]\n              })\n              .join(\", \")}\n          </td>\n        </tr>\n      </table>\n    </>\n    )\n  }\n  \n  function ShowChart(){\n    const wonScore = jsonData.result['wonScore'];\n    const wonScoreList = [];\n    const wonScoreData = wonScore\n      .split(\" \")\n      .map((item)=>{return item.split(\"=\")[1]})\n      .forEach((item)=>{wonScoreList.push(item)})\n    return (\n      <>\n        { wonScoreList.map((item) => { \n          if (item !== undefined) {\n            return(\n            <div className=\"barContainer\">\n              <ChartBar num={parseInt(item)}>\n                <p>{item}</p>\n              </ChartBar>\n            </div>\n          )}\n          }) }\n      </>\n      );\n  }\n  \n  return (\n    <>\n      <section className=\"result\">\n        <div className=\"inner\">\n          <div className=\"title\">\n            <h1>직업가치관검사 결과표</h1>\n            <div className=\"h1Border\"></div>\n            <p>직업가치관이란 직업을 선택할 때 영향을 끼치는 자신만의 믿음과 신념입니다. 따라서 여러분의 직업생활과 관련하여 포기하지 않는 무게중심의 역할을 한다고 볼 수 있습니다. 직업가치관검사는 여러분이 직업을 선택할 때 상대적으로 어떠한 가치를 중요하게 생각하는지를 알려줍니다. 또한 본인이 가장 중요하게 생각하는 가치를 충족시켜줄 수 있는 직업에 대해 생각해 볼 기회를 제공합니다.</p>\n          </div>\n          { jsonData && Object.keys(jsonData).length > 0 ?\n          <>\n          <table border=\"1\">\n            <th>이름</th>\n            <th>성별</th>\n            <th>검사일</th>\n            <tr>\n              <td>{context.name}</td>\n              <td>{context.gender === \"100323\" ? \"남\" : \"여\"}</td>\n              <td>{jsonData.result['endDtm'].slice(0,10).split(\"-\").join(\".\")}</td>\n            </tr>\n          </table>\n          <div className=\"jobValue\">\n            <h2>직업가치관 결과</h2>\n            <div className=\"chartInner\">\n              <table className=\"chartBg\">\n                <th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th>\n                <tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\n                <tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\n                <tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\n                <tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\n                <tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\n                <tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\n                <tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\n                <tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\n                <tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>              </table>\n              <div className=\"chartBarContainer\">\n                <ShowChart />\n              </div>\n            </div>\n            <div className=\"category\">\n              <p>능력발휘</p>\n              <p>자율성</p>\n              <p>보수</p>\n              <p>안정성</p>\n              <p>사회적 인정</p>\n              <p>사회봉사</p>\n              <p>자기계발</p>\n              <p>창의성</p>\n            </div>\n          </div>\n          </>\n          : undefined}\n          <div className=\"relativeJob\">\n            <h2>가치관과 관련이 높은 직업</h2>\n            <div className=\"jobInfo\">\n              { jobInfo && jobInfo.length > 0 ? <ShowJobInfo /> : undefined }\n            </div>\n            <div className=\"majorInfo\">\n              { majorInfo && majorInfo.length > 0 ? <ShowMajorInfo /> : undefined }\n            </div>\n          </div>\n          <div className=\"btnBox\">\n            <BasicLink to='/' \n              onClick={()=>{\n                context['name'] = \"\";\n                context['gender'] = \"\";\n                context['answers'] = \"\";\n              }}\n              ><button className=\"btn\">다시 검사하기</button>\n            </BasicLink>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom';\nimport UserStore from \"./store/user\";\nimport './css/reset.css';\nimport './css/setUsers.css'\nimport './css/app.css';\nimport './css/testExample.css'\nimport './css/test.css'\nimport './css/finish.css'\nimport './css/result.css'\nimport { TestExample } from './components/TestExample';\nimport { SetUser } from './components/SetUser';\nimport { Test } from './components/Test';\nimport { FinishTest } from './components/FinishTest';\nimport { Result } from './components/Result';\n\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    this.logErrorToMyService(error, errorInfo);\n  }\n\n  logErrorToMyService(error, errorInfo) {\n    console.log( `error: ${error}, errorInfo: ${JSON.stringify(errorInfo)}` )\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>페이지를 요청할 수 없습니다.</h1>;\n    }\n\n    return this.props.children; \n  }\n}\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <ErrorBoundary>\n        <UserStore>\n          <Route exact path='/'>\n          <SetUser></SetUser>\n          </Route>\n          <Route path='/testExample'>\n            <TestExample></TestExample>\n          </Route>\n          <Route path='/test/:page'>\n            <Test></Test>\n          </Route>\n          <Route path='/finishTest'>\n            <FinishTest></FinishTest>\n          </Route>\n          <Route path='/result'>\n            <Result></Result>\n          </Route>\n        </UserStore>\n      </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}